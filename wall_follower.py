'''
Created on Apr 2, 2018

@author: dexca
'''
import numpy as np

direction = {0: "left", 1: "up", 2: "right", 3: "down"}

typeMaze = np.array([(    [1,0],     [0,1],        [0,1],        [0,1],        [0,1],        [0,1],        [0,1],        [1,1],        [0,1],        [0,1],        [0,1],        [0,1],        [1,1],        [0,1],        [0,1],        [1,0]        ),
(    [1,0],        [1,1],        [0,1],        [0,1],        [0,1],        [0,1],        [1,0],        [1,0],        [0,1],        [1,1],        [0,1],        [0,0],        [0,0],        [1,1],        [0,0],        [1,0]        ),
(    [1,0],        [1,0],        [1,0],        [0,1],        [0,1],        [1,0],        [1,0],        [0,1],        [0,1],        [1,0],        [1,1],        [0,1],        [0,1],        [0,1],        [1,1],        [1,0]        ),
(    [1,0],        [1,0],        [0,1],        [1,1],        [0,0],        [1,0],        [1,1],        [0,1],        [1,0],        [0,0],        [1,0],        [1,1],        [0,1],        [1,0],        [1,0],        [1,0]        ),
(    [1,0],        [0,1],        [1,0],        [1,0],        [1,1],        [0,0],        [1,0],        [1,1],        [0,1],        [0,1],        [0,0],        [1,0],        [1,0],        [1,0],        [1,0],        [1,0]        ),
(    [1,0],        [0,1],        [1,0],        [1,1],        [0,0],        [1,1],        [0,0],        [1,0],        [1,1],        [0,1],        [0,1],        [1,0],        [1,0],        [0,0],        [0,0],        [1,0]        ),
(    [1,1],        [0,0],        [1,0],        [1,0],        [1,1],        [0,1],        [1,0],        [1,0],        [1,0],        [1,0],        [1,0],        [1,0],        [0,1],        [1,1],        [0,1],        [1,0]        ),
(    [1,0],        [0,1],        [0,0],        [1,0],        [1,0],        [1,0],        [0,0],        [1,0],        [0,0],        [1,0],        [1,0],        [1,0],        [1,0],        [1,0],        [1,0],        [1,0]        ),
(    [1,1],        [0,1],        [1,0],        [1,0],        [1,0],        [0,1],        [0,1],        [0,1],        [1,1],        [0,0],        [1,0],        [1,0],        [1,0],        [1,0],        [1,1],        [1,0]        ),
(    [1,0],        [1,0],        [0,0],        [1,0],        [0,1],        [0,1],        [1,0],        [1,1],        [0,0],        [1,1],        [0,0],        [1,0],        [1,0],        [1,0],        [1,0],        [1,0]        ),
(    [1,0],        [1,1],        [1,1],        [0,1],        [0,1],        [0,0],        [1,0],        [1,0],        [1,1],        [0,0],        [1,1],        [0,0],        [1,0],        [1,0],        [1,0],        [1,0]        ),
(    [1,0],        [0,0],        [1,0],        [1,1],        [0,1],        [0,1],        [0,0],        [1,0],        [1,0],        [0,1],        [1,0],        [1,1],        [1,0],        [1,0],        [1,0],        [1,0]        ),
(    [1,1],        [0,1],        [0,0],        [1,0],        [0,1],        [0,1],        [1,1],        [0,0],        [1,1],        [0,0],        [1,0],        [1,0],        [0,0],        [1,0],        [1,0],        [1,0]        ),
(    [1,0],        [0,1],        [0,1],        [0,1],        [0,1],        [1,0],        [0,0],        [1,0],        [1,0],        [1,1],        [1,0],        [0,1],        [0,1],        [0,0],        [1,0],        [1,0]        ),
(    [1,0],        [0,1],        [0,1],        [0,1],        [1,0],        [0,1],        [0,1],        [0,0],        [1,0],        [0,0],        [0,1],        [0,1],        [0,1],        [0,1],        [0,0],        [1,0]        ),
(    [0,1],        [0,1],        [0,1],        [0,1],        [0,1],        [0,1],        [0,1],        [0,1],        [0,1],        [0,1],        [0,1],        [0,1],        [0,1],        [0,1],        [0,0],        [0,0]        )
])

def convert(maze,size):
    four_maze = np.zeros((size,size,4),dtype = np.int)
    for x in range(size):
        for y in range(size):
            four_maze[x][y][0]=maze[x][y][0]
            four_maze[x][y][1]=maze[x][y][1]
            four_maze[x][y][2]=maze[x][y+1][0]
            four_maze[x][y][3]=maze[x+1][y][1]  
            
    four_maze[0][0][1]=1
    four_maze[14][14][3]=-1
    return four_maze
maze = convert(typeMaze,15)

def getMove(w):
    if w==0:
        m=3
    elif w==1:
        m=0
    elif w==2:
        m=1
    else:
        m=2
    return m

def getWall(m):
    if m==0:
        w=1
    elif m==1:
        w=2
    elif m==2:
        w=3
    else: 
        w=0
    return w
        
def follower(maze,mazeSize):
    x = 0
    y = 0
    numMoves=0
    curWall = 0
    
    while(x!=mazeSize-1 or y!=mazeSize-1): 
        if maze[y][x][curWall]==1:
            while(1):
                if maze[y][x][getMove(curWall)]==0:
                    break
                else:
                    curWall = getMove(curWall)
            #move along wall
            move = getMove(curWall)
            if move == 0:
                x=x-1
            elif move == 1:
                y=y-1
            elif move == 2:
                x=x+1
            else:
                y=y+1
        else:
            #move towards wall
            move=curWall
            curWall=getWall(move)
            if move == 0:
                x=x-1
            elif move == 1:
                y=y-1
            elif move == 2:
                x=x+1
            else:
                y=y+1
        print(x,y)
        numMoves=numMoves+1
    return numMoves

print(follower(maze,15))